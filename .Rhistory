if (is.numeric(item)){
feature[i]<-mean(item)
i <- i+1
}
}
features <- pblapply(files.list,
function(x, dir){
file <- paste0(dir,x)
h5f <- h5dump(file, load = TRUE)
analysis <- h5f$analysis
song <- substr(x, start = 12, stop = nchar(x)-3)
feature <- rep(0,15)
i <- 1
for (item in analysis) {
if (is.numeric(item)){
feature[i]<-mean(item)
i <- i+1
}
}
feature <- append(feature, song, after = 0)
H5close()
return(feature)
},
dir = dir.h5
)
features <- pblapply(files.list, function(x, dir){
file <- paste0(dir, x)
h5f <- h5dump(file, load = TRUE)
# Here we only use /analysis, and exclude /metddata, /musicbrainz and /analysis/songs
analysis <- h5f$analysis
# 001: bars_confidence
bars_confidence_mean <- mean(analysis$bars_confidence) # mean
bars_confidence_median <- median(analysis$bars_confidence) # median
bars_confidence_sd <- sd(analysis$bars_confidence) # standard deviation
# 002: bars_start
bars_start_mean <- mean(analysis$bars_start) # mean
bars_start_median <- median(analysis$bars_start) # median
bars_start_sd <- sd(analysis$bars_start) # standard deviation
# 003: beats_confidence
beats_confidence_mean <- mean(analysis$beats_confidence) # mean
beats_confidence_median <- median(analysis$beats_confidence) # median
beats_confidence_sd <- sd(analysis$beats_confidence) # standard deviation
# 004: beats_start
beats_start_mean <- mean(analysis$beats_start) # mean
beats_start_median <- median(analysis$beats_start) # median
beats_start_sd <- sd(analysis$beats_start) # standard deviation
# 005: sections_confidence
sections_confidence_mean <- mean(analysis$sections_confidence) # mean
sections_confidence_median <- median(analysis$sections_confidence) # median
sections_confidence_sd <- sd(analysis$sections_confidence) # standard deviation
# 006: sections_start
sections_start_mean <- mean(analysis$sections_start) # mean
sections_start_median <- median(analysis$sections_start) # median
sections_start_sd <- sd(analysis$sections_start) # standard deviation
# 007: segments_confidence
segments_confidence_mean <- mean(analysis$segments_confidence) # mean
segments_confidence_median <- median(analysis$segments_confidence) # median
segments_confidence_sd <- sd(analysis$segments_confidence) # standard deviation
# 008: segments_loudness_max
segments_loudness_max_mean <- mean(analysis$segments_loudness_max) # mean
segments_loudness_max_median <- median(analysis$segments_loudness_max) # median
segments_loudness_max_sd <- sd(analysis$segments_loudness_max) # standard deviation
# 009: segments_loudness_max_time
segments_loudness_max_time_mean <- mean(analysis$segments_loudness_max_time) # mean
segments_loudness_max_time_median <- median(analysis$segments_loudness_max_time) # median
segments_loudness_max_time_sd <- sd(analysis$segments_loudness_max_time) # standard deviation
# 010: segments_loudness_start
segments_loudness_start_mean <- mean(analysis$segments_loudness_start) # mean
segments_loudness_start_median <- median(analysis$segments_loudness_start) # median
segments_loudness_start_sd <- sd(analysis$segments_loudness_start) # standard deviation
# 011: segments_pitches
segments_pitches_mean <- mean(analysis$segments_pitches) # mean
segments_pitches_median <- median(analysis$segments_pitches) # median
segments_pitches_sd <- sd(analysis$segments_pitches) # standard deviation
# 012: segments_start
segments_start_mean <- mean(analysis$segments_start) # mean
segments_start_median <- mean(analysis$segments_start) # median
segments_start_sd <- sd(analysis$segments_start) # standard deviation
# 013: segments_timbre
segments_timbre_mean <- mean(analysis$segments_timbre) # mean
segments_timbre_median <- median(analysis$segments_timbre) # median
segments_timbre_sd <- sd(analysis$segments_timbre) # standard deviation
# 014: tatums_confidence
tatums_confidence_mean <- mean(analysis$tatums_confidence) # mean
tatums_confidence_median <- median(analysis$tatums_confidence) # median
tatums_confidence_sd <- sd(analysis$tatums_confidence) # standard deviation
# 015: tatums_start
tatums_start_mean <- mean(analysis$tatums_start) # mean
tatums_start_median <- median(analysis$tatums_start) # median
tatums_start_sd <- sd(analysis$tatums_start) # standard deviation
song <- substr(x, start = 7, stop = nchar(x)-3)
H5close()
return(c(song,
bars_confidence_mean, bars_confidence_median, bars_confidence_sd, # grp 001
bars_start_mean, bars_start_median, bars_start_sd, # grp 002
beats_confidence_mean, beats_confidence_median, beats_confidence_sd, # grp 003
beats_start_mean, beats_start_median, beats_start_sd, # grp 004
sections_confidence_mean, sections_confidence_median, sections_confidence_sd, # grp 005
sections_start_mean, sections_start_median, sections_start_sd, # grp 006
segments_confidence_mean, segments_confidence_median, segments_confidence_sd, # grp 007
segments_loudness_max_mean, segments_loudness_max_median, segments_loudness_max_sd, # grp 008
segments_loudness_max_time_mean, segments_loudness_max_time_median, segments_loudness_max_time_sd, # grp 009
segments_loudness_start_mean, segments_loudness_start_median, segments_loudness_start_sd, # grp 010
segments_pitches_mean, segments_pitches_median, segments_pitches_sd, # grp 011
segments_start_mean, segments_start_median, segments_start_sd, # grp 012
segments_timbre_mean, segments_timbre_median, segments_timbre_sd, # grp 013
tatums_confidence_mean, tatums_confidence_median, tatums_confidence_sd, # grp 014
tatums_start_mean, tatums_start_median, tatums_start_sd # grp 015
))
},
dir = dir.h5
)
song.features.df[,1] <- as.character(song.features.df[,1])
for (i in 2:16){song.features.df[,i] <- as.numeric(song.features.df[,i])}
library(dplyr)
song.feature2.df2 <- song_features %>% select(-song)
lyr2 <- lyr %>% select(-1,-2,-3,-6:-30)
song.features.df <- data.frame(matrix(unlist(features),byrow = TRUE, ncol = 46))
names(song.features.df) <- c('song',
'bars_confidence_mean', 'bars_confidence_median', 'bars_confidence_sd',
'bars_start_mean', 'bars_start_median', 'bars_start_sd',
'beats_confidence_mean', 'beats_confidence_median', 'beats_confidence_sd',
'beats_start_mean', 'beats_start_median', 'beats_start_sd',
'sections_confidence_mean', 'sections_confidence_median', 'sections_confidence_sd',
'sections_start_mean', 'sections_start_median', 'sections_start_sd',
'segments_confidence_mean', 'segments_confidence_median', 'segments_confidence_sd',
'segments_loudness_max_mean', 'segments_loudness_max_median', 'segments_loudness_max_sd',
'segments_loudness_max_time_mean', 'segments_loudness_max_time_median', 'segments_loudness_max_time_sd',
'segments_loudness_start_mean', 'segments_loudness_start_median', 'segments_loudness_start_sd',
'segments_pitches_mean', 'segments_pitches_median', 'segments_pitches_sd',
'segments_start_mean', 'segments_start_median', 'segments_start_sd',
'segments_timbre_mean', 'segments_timbre_median', 'segments_timbre_sd',
'tatums_confidence_mean', 'tatums_confidence_median', 'tatums_confidence_sd',
'tatums_start_mean', 'tatums_start_median', 'tatums_start_sd'
)
song.features.df[,1] <- as.character(song.features.df[,1])
for (i in 2:16){song.features.df[,i] <- as.numeric(song.features.df[,i])}
for (i in 2:46){song.features.df[,i] <- as.numeric(song.features.df[,i])}
song.feature2.df2 <- song_features %>% select(-song)
lyr2 <- lyr %>% select(-1,-2,-3,-6:-30)
song.feature2.df2 <- song.features.df %>% select(-song)
load("~/GitHub/Fall2016-proj4-pf2317/data/lyr.RData")
load("./data/lyr.RData")
load("./data/lyr.RData")
features.df <- data.frame(matrix(unlist(features),byrow = TRUE, ncol = 46))
View(song.feature2.df2)
rm(song.feature2.df2)
rm(song.features.df2)
rm(song.features.df)
names(features.df) <- c('song',
'bars_confidence_mean', 'bars_confidence_median', 'bars_confidence_sd',
'bars_start_mean', 'bars_start_median', 'bars_start_sd',
'beats_confidence_mean', 'beats_confidence_median', 'beats_confidence_sd',
'beats_start_mean', 'beats_start_median', 'beats_start_sd',
'sections_confidence_mean', 'sections_confidence_median', 'sections_confidence_sd',
'sections_start_mean', 'sections_start_median', 'sections_start_sd',
'segments_confidence_mean', 'segments_confidence_median', 'segments_confidence_sd',
'segments_loudness_max_mean', 'segments_loudness_max_median', 'segments_loudness_max_sd',
'segments_loudness_max_time_mean', 'segments_loudness_max_time_median', 'segments_loudness_max_time_sd',
'segments_loudness_start_mean', 'segments_loudness_start_median', 'segments_loudness_start_sd',
'segments_pitches_mean', 'segments_pitches_median', 'segments_pitches_sd',
'segments_start_mean', 'segments_start_median', 'segments_start_sd',
'segments_timbre_mean', 'segments_timbre_median', 'segments_timbre_sd',
'tatums_confidence_mean', 'tatums_confidence_median', 'tatums_confidence_sd',
'tatums_start_mean', 'tatums_start_median', 'tatums_start_sd'
)
features.df[,1] <- as.character(features.df[,1])
for (i in 2:46){features.df[,i] <- as.numeric(features.df[,i])}
load("./data/lyr.RData")
features.df2 <- features.df %>% select(-song)
lyr2 <- lyr %>% select(-1,-2,-3,-6:-30)
View(features.df)
song <- substr(x, start = 12, stop = nchar(x)-3)
features <- pblapply(files.list, function(x, dir){
file <- paste0(dir, x)
h5f <- h5dump(file, load = TRUE)
analysis <- h5f$analysis
bars_confidence_mean <- mean(analysis$bars_confidence) # mean
bars_confidence_median <- median(analysis$bars_confidence) # median
bars_confidence_sd <- sd(analysis$bars_confidence) # standard deviation
bars_start_mean <- mean(analysis$bars_start) # mean
bars_start_median <- median(analysis$bars_start) # median
bars_start_sd <- sd(analysis$bars_start) # standard deviation
beats_confidence_mean <- mean(analysis$beats_confidence) # mean
beats_confidence_median <- median(analysis$beats_confidence) # median
beats_confidence_sd <- sd(analysis$beats_confidence) # standard deviation
beats_start_mean <- mean(analysis$beats_start) # mean
beats_start_median <- median(analysis$beats_start) # median
beats_start_sd <- sd(analysis$beats_start) # standard deviation
sections_confidence_mean <- mean(analysis$sections_confidence) # mean
sections_confidence_median <- median(analysis$sections_confidence) # median
sections_confidence_sd <- sd(analysis$sections_confidence) # standard deviation
sections_start_mean <- mean(analysis$sections_start) # mean
sections_start_median <- median(analysis$sections_start) # median
sections_start_sd <- sd(analysis$sections_start) # standard deviation
segments_confidence_mean <- mean(analysis$segments_confidence) # mean
segments_confidence_median <- median(analysis$segments_confidence) # median
segments_confidence_sd <- sd(analysis$segments_confidence) # standard deviation
segments_loudness_max_mean <- mean(analysis$segments_loudness_max) # mean
segments_loudness_max_median <- median(analysis$segments_loudness_max) # median
segments_loudness_max_sd <- sd(analysis$segments_loudness_max) # standard deviation
segments_loudness_max_time_mean <- mean(analysis$segments_loudness_max_time) # mean
segments_loudness_max_time_median <- median(analysis$segments_loudness_max_time) # median
segments_loudness_max_time_sd <- sd(analysis$segments_loudness_max_time) # standard deviation
segments_loudness_start_mean <- mean(analysis$segments_loudness_start) # mean
segments_loudness_start_median <- median(analysis$segments_loudness_start) # median
segments_loudness_start_sd <- sd(analysis$segments_loudness_start) # standard deviation
segments_pitches_mean <- mean(analysis$segments_pitches) # mean
segments_pitches_median <- median(analysis$segments_pitches) # median
segments_pitches_sd <- sd(analysis$segments_pitches) # standard deviation
segments_start_mean <- mean(analysis$segments_start) # mean
segments_start_median <- mean(analysis$segments_start) # median
segments_start_sd <- sd(analysis$segments_start) # standard deviation
segments_timbre_mean <- mean(analysis$segments_timbre) # mean
segments_timbre_median <- median(analysis$segments_timbre) # median
segments_timbre_sd <- sd(analysis$segments_timbre) # standard deviation
tatums_confidence_mean <- mean(analysis$tatums_confidence) # mean
tatums_confidence_median <- median(analysis$tatums_confidence) # median
tatums_confidence_sd <- sd(analysis$tatums_confidence) # standard deviation
tatums_start_mean <- mean(analysis$tatums_start) # mean
tatums_start_median <- median(analysis$tatums_start) # median
tatums_start_sd <- sd(analysis$tatums_start) # standard deviation
song <- substr(x, start = 12, stop = nchar(x)-3)
H5close()
return(c(song,
bars_confidence_mean, bars_confidence_median, bars_confidence_sd, # grp 001
bars_start_mean, bars_start_median, bars_start_sd, # grp 002
beats_confidence_mean, beats_confidence_median, beats_confidence_sd, # grp 003
beats_start_mean, beats_start_median, beats_start_sd, # grp 004
sections_confidence_mean, sections_confidence_median, sections_confidence_sd, # grp 005
sections_start_mean, sections_start_median, sections_start_sd, # grp 006
segments_confidence_mean, segments_confidence_median, segments_confidence_sd, # grp 007
segments_loudness_max_mean, segments_loudness_max_median, segments_loudness_max_sd, # grp 008
segments_loudness_max_time_mean, segments_loudness_max_time_median, segments_loudness_max_time_sd, # grp 009
segments_loudness_start_mean, segments_loudness_start_median, segments_loudness_start_sd, # grp 010
segments_pitches_mean, segments_pitches_median, segments_pitches_sd, # grp 011
segments_start_mean, segments_start_median, segments_start_sd, # grp 012
segments_timbre_mean, segments_timbre_median, segments_timbre_sd, # grp 013
tatums_confidence_mean, tatums_confidence_median, tatums_confidence_sd, # grp 014
tatums_start_mean, tatums_start_median, tatums_start_sd # grp 015
))
},
dir = dir.h5
)
X <- feature2.df2
X <- features.df2
Y <- lyr2[-c(2250:2350),]
View(features.df2)
x <- c(0.82324952352792, 0.11953364405781, 0.588659686036408, 0.41683742380701,
0.11452184105292, 0.438547774450853, 0.586471405345947, 0.943002870306373,
0.28184655145742, 0.722095313714817)
calcRank <- function(x){
sorted <- x[order(x)]
ranks <- sapply(x, function(x) which(sorted==x))
return(ranks)
}
calcRank(x)
order(x)
order(x)
x <- c(0.82324952352792, 0.82324952352792, 0.588659686036408, 0.41683742380701,
0.11452184105292, 0.438547774450853, 0.586471405345947, 0.943002870306373,
0.28184655145742, 0.722095313714817)
order(x)
ranks <- sapply(x, function(x) which(sorted==x))
x <- c(0.82324952352792, 0.82324952352792, 0.588659686036408, 0.41683742380701,
0.11452184105292, 0.438547774450853, 0.586471405345947, 0.943002870306373,
0.28184655145742, 0.722095313714817)
calcRank <- function(x){
sorted <- x[order(x)]
ranks <- sapply(x, function(x) which(sorted==x))
return(ranks)
}
calcRank(x)
calcRank(x)
x <- c(0.82324952352792, 0.11953364405781, 0.588659686036408, 0.41683742380701,
0.11452184105292, 0.438547774450853, 0.586471405345947, 0.943002870306373,
0.28184655145742, 0.722095313714817)
calcRank <- function(x){
sorted <- x[order(x)]
ranks <- sapply(x, function(x) which(sorted==x))
return(ranks)
}
calcRank(x)
?order
x <- c(0.82324952352792, 0.82324952352792, 0.588659686036408, 0.41683742380701,
0.11452184105292, 0.438547774450853, 0.586471405345947, 0.943002870306373,
0.28184655145742, 0.722095313714817)
order(x)
x[order(x)]
sorted<-x[order(x)]
which(sorted==)
which(sorted==x)
?ave
for (meansure in s){
distance <- as.matrix(dist(features.df2, meansure))
t <- proc.time()
diff <- rep(0,test_num)
for (i in 1:test_num){
pre <- lyr2[which.min(distance[2350-(i-1),-c(2350:2350-(test_num-1))]),]
true <- lyr2[2350-(i-1),]
diff[i] <- norm((pre-true),type="2")
#diff[i] <- KL.empirical(pre,true)
}
time[j] <- (proc.time()-t)[3]
error[j] <- mean(diff)
j<-j+1
}
test_num<-100
s <- c("euclidean", "maximum", "manhattan", "canberra", "binary", "minkowski")
time <- rep(0,6)
error <- rep(0,6)
j <- 1
for (meansure in s){
distance <- as.matrix(dist(features.df2, meansure))
t <- proc.time()
diff <- rep(0,test_num)
for (i in 1:test_num){
pre <- lyr2[which.min(distance[2350-(i-1),-c(2350:2350-(test_num-1))]),]
true <- lyr2[2350-(i-1),]
diff[i] <- norm((pre-true),type="2")
#diff[i] <- KL.empirical(pre,true)
}
time[j] <- (proc.time()-t)[3]
error[j] <- mean(diff)
j<-j+1
}
?rank
distance <- as.matrix(dist(features.df2, meansure))
pre <- lyr2[which.min(distance[2350,-c(2350)]),]
pre
pre.rank <- rank(-pre, method="first")
pre.rank <- rank(-pre,ties.method="first")
pre.rank
pre
pre.rank
distance <- as.matrix(dist(features.df2, meansure))
pre <- lyr2[which.min(distance[2350,-c(2350)]),]
pre.rank <- rank(-pre[2,],ties.method="first")
pre.rank
pre.rank <- rank(pre[2,],ties.method="first")
pre.rank
pre <- lyr2[which.min(distance[2350,-c(2350)]),c(1:20)]
pre
pre.rank <- rank(pre[2,],ties.method="first")
pre.rank
pre[2,]
pre[1,]
pre.rank <- rank(pre[1,],ties.method="first")
pre.rank
pre.rank <- rank(-pre[1,],ties.method="first")
pre.rank
pre.rank <- rank(-pre,ties.method="first")
pre.rank
pre <- lyr2[which.min(distance[2350,-c(2350)]),c(1:20)]
pre
pre.rank <- rank(-pre,ties.method="first")
pre.rank
pre <- lyr2[which.min(distance[2350,-c(2350)]),]
pre.rank <- rank(-pre,ties.method="first")
pre.rank
names(true)[which(lyr2[2350-(i-1),]!=0)]
true.rank[names(true)[which(lyr2[2350-(i-1),]!=0)]]
true <- lyr2[2350,]
true.rank <- rank(-true,ties.method="first")
true.rank[haha]
haha <- names(true)[which(lyr2[2350-(i-1),]!=0)]
true.rank[haha]
haha <- names(true)[which(lyr2[2350,]!=0)]
true.rank[haha]
pre.rank[haha]
exist.word <- names(true)[which(lyr2[2350,]!=0)]
true.rank[exist.name]
true.rank <- rank(-true,ties.method="first")
true <- lyr2[2350,]
true.rank <- rank(-true,ties.method="first")
true.rank[exist.name]
exist.word <- names(true)[which(lyr2[2350,]!=0)]
true.rank[exist.name]
true.rank[exist.word]
exist.word <- names(true)[which(lyr2[2350-(i-1),]!=0)]
pre.rank[exist.word]
?rank
test_num<-100
distance.measure <- c("euclidean", "maximum", "manhattan", "canberra", "binary", "minkowski")
ties.method <- c("first","last")
score <- 0
scores <- rep(0,12)
time <- rep(0,12)
j <- 1
for (method in ties.method) {
for (measure in distance.measure){
distance <- as.matrix(dist(features.df2, distance.measure))
t <- proc.time()
diff <- rep(0,test_num)
for (i in 1:test_num){
pre <- lyr2[which.min(distance[2350-(i-1),-c(2350:2350-(test_num-1))]),]
pre.rank <- rank(-pre,ties.method=method)
true <- lyr2[2350-(i-1),]
true.rank <- rank(-true,ties.method="first")
exist.word <- names(true)[which(lyr2[2350-(i-1),]!=0)]
score <- score + sum[pre.rank[exist.word]]/length(exist.word)
}
time[j] <- (proc.time()-t)[3]
scores[j] <- score/test_num
j<-j+1
}
}
features.df2 <- features.df %>% select(-song)
lyr2 <- lyr %>% select(-1,-2,-3,-6:-30)
for (method in ties.method) {
for (measure in distance.measure){
distance <- as.matrix(dist(features.df2, distance.measure))
t <- proc.time()
diff <- rep(0,test_num)
for (i in 1:test_num){
pre <- lyr2[which.min(distance[2350-(i-1),-c(2350:2350-(test_num-1))]),]
pre.rank <- rank(-pre,ties.method=method)
true <- lyr2[2350-(i-1),]
true.rank <- rank(-true,ties.method="first")
exist.word <- names(true)[which(lyr2[2350-(i-1),]!=0)]
score <- score + sum(pre.rank[exist.word])/length(exist.word)
}
time[j] <- (proc.time()-t)[3]
scores[j] <- score/test_num
j<-j+1
}
}
test_num<-100
distance.measure <- c("euclidean", "maximum", "manhattan", "canberra", "binary", "minkowski")
ties.method <- c("first","last")
score <- 0
scores <- rep(0,12)
time <- rep(0,12)
j <- 1
for (method in ties.method) {
for (measure in distance.measure){
distance <- as.matrix(dist(features.df2, measure))
t <- proc.time()
for (i in 1:test_num){
pre <- lyr2[which.min(distance[2350-(i-1),-c(2350:2350-(test_num-1))]),]
pre.rank <- rank(-pre,ties.method=method)
true <- lyr2[2350-(i-1),]
true.rank <- rank(-true,ties.method=method)
exist.word <- names(true)[which(lyr2[2350-(i-1),]!=0)]
score <- score + sum(pre.rank[exist.word])/length(exist.word)
}
time[j] <- (proc.time()-t)[3]
scores[j] <- score/test_num
j<-j+1
}
}
test_num<-50
distance.measure <- c("euclidean", "maximum", "manhattan", "canberra", "binary", "minkowski")
ties.method <- c("first","last")
score <- 0
scores <- rep(0,12)
time <- rep(0,12)
j <- 1
for (method in ties.method) {
for (measure in distance.measure){
distance <- as.matrix(dist(features.df2, measure))
t <- proc.time()
for (i in 1:test_num){
pre <- lyr2[which.min(distance[2350-(i-1),-c(2350:2350-(test_num-1))]),]
pre.rank <- rank(-pre,ties.method=method)
true <- lyr2[2350-(i-1),]
true.rank <- rank(-true,ties.method=method)
exist.word <- names(true)[which(lyr2[2350-(i-1),]!=0)]
score <- score + sum(pre.rank[exist.word])/length(exist.word)
}
time[j] <- (proc.time()-t)[3]
scores[j] <- score/test_num
j<-j+1
}
}
scores
for (i in 12:2) scores[i]<-scores[i]-scores[i-1]
scores
length(exist.word)
rowSums(features.df2)
colSums(features.df2)
rowSums(lyr2)
colSums(lyr2)
cores
scores
beachMark <- rank(-colSums(lyr2),"last")
beachMark
rank(-true,ties.method=method)
beachMark <- rank(-colSums(lyr2),"last")
beachMark <- rank(-colSums(lyr2),"last")
benchMark <- rank(-colSums(lyr2),"last")
benchMark
benchMark <- rank(-colSums(lyr2),"first")
benchMark
true.rank
benchMark <- rank(-colSums(lyr2),ties.method="first")
benchMark
sum(benchMark[exist.word])/length(exist.word)
scores
x<-lyr2[1,]+lyr2[2,]
x
lyr2[1,c(1:10)]
lyr2[1,c(2:10)]
x<-lyr2[1,]+lyr2[2,]
x
lyr2[1,c(2:10)]
lyr2[2,c(2:10)]
lyr2[2,c(2:10)]+lyr2[1,c(2:10)]
?sort
x<-(23,12,32,41,16,230)
x<-c(23,12,32,41,16,230)
sort(x,partial=2)
